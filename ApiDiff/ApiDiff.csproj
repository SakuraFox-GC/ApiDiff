<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net10.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EnablePreviewFeatures>true</EnablePreviewFeatures>
    <LangVersion>preview</LangVersion>
    <ApplicationIcon>brand.ico</ApplicationIcon>
    <IsAotCompatible>true</IsAotCompatible>
    <PublishAot>true</PublishAot>
    <UseSizeOptimizedLinq>false</UseSizeOptimizedLinq>
    <IlcInstructionSet>native</IlcInstructionSet>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\deps\CppAst.NET\src\CppAst\CppAst.csproj" />
    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.196">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <PropertyGroup>
    <!-- Workaround for issue https://github.com/microsoft/ClangSharp/issues/129 -->
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == '' AND '$(PackAsTool)' != 'true'">$(NETCoreSdkRuntimeIdentifier)</RuntimeIdentifier>
  </PropertyGroup>

  <ItemGroup>
    <DirectPInvoke Include="ntdll" />
    <DirectPInvoke Include="Kernel32" />
    <DirectPInvoke Include="User32" />
    <DirectPInvoke Include="Advapi32" />
    <DirectPInvoke Include="libclang" />
    <DirectPInvoke Include="libClangSharp" />
    <NativeLibrary Include="$(ProjectDir)lib\x64\libclang.lib" Condition="$(RuntimeIdentifier.StartsWith('win-x64'))" />
    <NativeLibrary Include="$(ProjectDir)lib\x64\libClangSharp.lib" Condition="$(RuntimeIdentifier.StartsWith('win-x64'))" />
  </ItemGroup>

  <ItemGroup>
    <LinkerArg Include="/opt:ref /opt:icf" />
    <LinkerArg Include="/emittoolversioninfo:no" />
	<LinkerArg Include="/emitpogophaseinfo" Condition="$(Configuration) == 'Release'" />
    <LinkerArg Include="/pdbaltpath:%_PDB%" />
  </ItemGroup>

</Project>
